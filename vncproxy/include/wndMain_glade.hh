// generated 2007/1/5 3:28:06 EST by cjx@cjx-laptop.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/cjx/proj/sorc/trunk/src/vncproxy/VNCProxy.glade
// for gtk 2.10.6 and gtkmm 2.2.12
//
// Please modify the corresponding derived classes in ./src/wndMain.hh and./src/wndMain.cc

#ifndef _WNDMAIN_GLADE_HH
#  define _WNDMAIN_GLADE_HH

// Since all your widgets were private I made them all public.
// To differentiate between accessable (e.g. entries, output labels)
// and unaccessible widgets (e.g. static labels, containers)
// you should use the 'visibility' property (only visible in C++ mode)


#if !defined(GLADEMM_DATA)
#define GLADEMM_DATA 
#include <gtkmm/accelgroup.h>

class GlademmData
{  
        
        Glib::RefPtr<Gtk::AccelGroup> accgrp;
public:
        
        GlademmData(Glib::RefPtr<Gtk::AccelGroup> ag) : accgrp(ag)
        {  
        }
        
        Glib::RefPtr<Gtk::AccelGroup>  getAccelGroup()
        {  return accgrp;
        }
};
#endif //GLADEMM_DATA

#include <gtkmm/window.h>
#include <gtkmm/label.h>
#include <gtkmm/entry.h>
#include <gtkmm/box.h>
#include <gtkmm/alignment.h>
#include <gtkmm/frame.h>
#include <gtkmm/treeview.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/button.h>
#include <gtkmm/image.h>

class wndMain_glade : public Gtk::Window
{  
        
        GlademmData *gmm_data;
public:
        class Gtk::Window * wndMain;
        class Gtk::Label * m_lblTitle;
        class Gtk::Label * m_label4;
        class Gtk::Entry * m_txtListenPort;
        class Gtk::Label * m_label8;
        class Gtk::Entry * m_txtDesktopIP;
        class Gtk::Label * m_label9;
        class Gtk::Entry * m_txtDesktopPort;
        class Gtk::HBox * m_hbox3;
        class Gtk::Alignment * m_alignment1;
        class Gtk::Label * m_label7;
        class Gtk::Frame * m_frame1;
        class Gtk::HBox * m_hbox2;
        class Gtk::TreeView * m_lstAllServices;
        class Gtk::ScrolledWindow * m_scrolledwindow1;
        class Gtk::Alignment * m_alignment2;
        class Gtk::Label * m_label2;
        class Gtk::Frame * m_frame2;
        class Gtk::Button * m_btnAddServices;
        class Gtk::Image * image1;
        class Gtk::Label * label1;
        class Gtk::HBox * hbox1;
        class Gtk::Alignment * alignment1;
        class Gtk::Button * m_btnAddAllServices;
        class Gtk::Button * m_btnRemoveServices;
        class Gtk::VBox * m_vbox2;
        class Gtk::TreeView * m_lstSelectedServices;
        class Gtk::ScrolledWindow * m_scrolledwindow2;
        class Gtk::Alignment * m_alignment3;
        class Gtk::Label * m_label3;
        class Gtk::Frame * m_frame3;
        class Gtk::HBox * m_hbox1;
        class Gtk::Button * m_btnLaunch;
        class Gtk::VBox * m_vbox1;
protected:
        
        wndMain_glade();
        
        ~wndMain_glade();
private:
        virtual void on_m_txtListenPort_changed() = 0;
        virtual void on_m_txtDesktopIP_changed() = 0;
        virtual void on_m_txtDesktopPort_changed() = 0;
        virtual void on_btnAddServices_clicked() = 0;
        virtual void on_m_btnAddAllServices_clicked() = 0;
        virtual void on_btnRemoveServices_clicked() = 0;
        virtual void on_btnLaunch_clicked() = 0;
};
#endif
