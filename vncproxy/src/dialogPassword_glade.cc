// generated 2007/1/16 14:41:20 EST by cjx@cjx-desktop.vislab2.usyd.edu.au
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/cjx/proj/sorc/trunk/src/vncproxy/VNCProxy.glade
// for gtk 2.10.6 and gtkmm 2.10.2
//
// Please modify the corresponding derived classes in ./src/dialogPassword.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "dialogPassword_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>

dialogPassword_glade::dialogPassword_glade(
)
{  dialogPassword = this;
   gmm_data = new GlademmData(get_accel_group());
   m_okbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
   m_lblLabel1 = Gtk::manage(new class Gtk::Label(_("Please enter password:")));
   m_txtPassword = Gtk::manage(new class Gtk::Entry());
   m_vbox1 = Gtk::manage(new class Gtk::VBox(false, 0));
   m_okbutton->set_flags(Gtk::CAN_FOCUS);
   m_okbutton->set_flags(Gtk::CAN_DEFAULT);
   m_okbutton->set_relief(Gtk::RELIEF_NORMAL);
   dialogPassword->get_action_area()->property_layout_style().set_value(Gtk::BUTTONBOX_END);
   m_lblLabel1->set_alignment(0.5,0.5);
   m_lblLabel1->set_padding(0,0);
   m_lblLabel1->set_justify(Gtk::JUSTIFY_LEFT);
   m_lblLabel1->set_line_wrap(false);
   m_lblLabel1->set_use_markup(false);
   m_lblLabel1->set_selectable(false);
   m_txtPassword->set_flags(Gtk::CAN_FOCUS);
   m_txtPassword->set_visibility(false);
   m_txtPassword->set_editable(true);
   m_txtPassword->set_max_length(8);
   m_txtPassword->set_text(_(""));
   m_txtPassword->set_has_frame(true);
   m_txtPassword->set_activates_default(false);
   m_vbox1->pack_start(*m_lblLabel1, Gtk::PACK_SHRINK, 0);
   m_vbox1->pack_start(*m_txtPassword, Gtk::PACK_SHRINK, 0);
   dialogPassword->get_vbox()->set_homogeneous(false);
   dialogPassword->get_vbox()->set_spacing(0);
   dialogPassword->get_vbox()->pack_start(*m_vbox1, Gtk::PACK_SHRINK, 0);
   dialogPassword->set_title(_("Authentication"));
   dialogPassword->set_modal(false);
   dialogPassword->property_window_position().set_value(Gtk::WIN_POS_NONE);
   dialogPassword->set_resizable(false);
   dialogPassword->property_destroy_with_parent().set_value(false);
   dialogPassword->set_has_separator(true);
   dialogPassword->add_action_widget(*m_okbutton, -5);
   m_okbutton->show();
   m_lblLabel1->show();
   m_txtPassword->show();
   m_vbox1->show();
   dialogPassword->show();
}

dialogPassword_glade::~dialogPassword_glade()
{  delete gmm_data;
}
